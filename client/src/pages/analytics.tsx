/**
 * Advanced Analytics Page
 * AI-powered business intelligence and insights
 * Beyond competitor capabilities - smart analytics for Bengali businesses
 */

import { useState, useEffect } from 'react';
import { useQuery } from '@tanstack/react-query';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Progress } from '@/components/ui/progress';
import { supabaseService, CURRENT_USER_ID } from '@/lib/supabase';
import { analyticsEngine } from '@/lib/advanced-analytics';
import { smartInventory } from '@/lib/smart-inventory';
import { loyaltyProgram } from '@/lib/loyalty-program';
import { formatCurrency, toBengaliNumber, getBengaliDate } from '@/lib/bengali-utils';
import { Link } from 'wouter';

export default function Analytics() {
  const [customerInsights, setCustomerInsights] = useState<any[]>([]);
  const [salesPatterns, setSalesPatterns] = useState<any[]>([]);
  const [inventoryMetrics, setInventoryMetrics] = useState<any>(null);
  const [loyaltyAnalytics, setLoyaltyAnalytics] = useState<any>(null);
  const [forecast, setForecast] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(true);

  // Load all analytics data
  useEffect(() => {
    const loadAnalytics = async () => {
      setIsLoading(true);
      try {
        console.log('üß† ANALYTICS PAGE: Loading comprehensive analytics...');
        
        const [
          insights,
          patterns,
          inventory,
          loyalty,
          monthlyForecast
        ] = await Promise.all([
          analyticsEngine.analyzeCustomerBehavior(),
          analyticsEngine.analyzeSalesPatterns(6),
          smartInventory.getInventoryMetrics(),
          loyaltyProgram.getLoyaltyAnalytics(),
          analyticsEngine.generateBusinessForecast('month')
        ]);

        setCustomerInsights(insights);
        setSalesPatterns(patterns);
        setInventoryMetrics(inventory);
        setLoyaltyAnalytics(loyalty);
        setForecast(monthlyForecast);
        
        console.log('üß† ANALYTICS PAGE: All analytics loaded successfully');
      } catch (error) {
        console.error('üß† ANALYTICS PAGE: Failed to load analytics:', error);
      } finally {
        setIsLoading(false);
      }
    };

    loadAnalytics();
  }, []);

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen bg-background-app">
        <div className="text-center fade-in">
          <div className="loading-spinner mx-auto mb-4"></div>
          <h3 className="text-lg font-semibold text-foreground mb-2 bengali-font">AI ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏ ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</h3>
          <p className="text-muted-foreground text-sm">‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶á‡¶®‡¶∏‡¶æ‡¶á‡¶ü ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-6 max-w-7xl">
      {/* Header */}
      <div className="mb-8">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-foreground mb-2 bengali-font flex items-center">
              <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-2xl flex items-center justify-center mr-4">
                <i className="fas fa-brain text-white text-xl"></i>
              </div>
              AI ‡¶¨‡¶ø‡¶ú‡¶®‡ßá‡¶∏ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏
            </h1>
            <p className="text-muted-foreground bengali-font">‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶á‡¶®‡¶∏‡¶æ‡¶á‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§ ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏</p>
          </div>
          <Badge variant="outline" className="px-4 py-2 text-sm">
            <i className="fas fa-robot mr-2"></i>
            AI-‡¶ö‡¶æ‡¶≤‡¶ø‡¶§
          </Badge>
        </div>
      </div>

      <Tabs defaultValue="overview" className="space-y-6">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="overview" className="bengali-font">‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡¶ø‡¶™‡ßç‡¶§</TabsTrigger>
          <TabsTrigger value="customers" className="bengali-font">‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï</TabsTrigger>
          <TabsTrigger value="sales" className="bengali-font">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º</TabsTrigger>
          <TabsTrigger value="inventory" className="bengali-font">‡¶∏‡ßç‡¶ü‡¶ï</TabsTrigger>
          <TabsTrigger value="forecast" className="bengali-font">‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏</TabsTrigger>
        </TabsList>

        {/* Overview Tab */}
        <TabsContent value="overview" className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <Card className="border-l-4 border-blue-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-sm font-medium text-muted-foreground bengali-font">‡¶Æ‡ßã‡¶ü ‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-blue-600 number-font">
                  {toBengaliNumber(customerInsights.length)}
                </div>
                <p className="text-sm text-muted-foreground bengali-font mt-1">
                  {toBengaliNumber(customerInsights.filter(c => c.riskLevel === 'high').length)} ‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø‡¶™‡ßÇ‡¶∞‡ßç‡¶£
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-green-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-sm font-medium text-muted-foreground bengali-font">‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶¨‡¶£‡¶§‡¶æ</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-green-600">
                  {forecast?.trendDirection === 'up' ? '‚ÜóÔ∏è' : forecast?.trendDirection === 'down' ? '‚ÜòÔ∏è' : '‚û°Ô∏è'}
                </div>
                <p className="text-sm text-muted-foreground bengali-font mt-1">
                  {forecast?.trendDirection === 'up' ? '‡¶¨‡ßÉ‡¶¶‡ßç‡¶ß‡¶ø ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá' : 
                   forecast?.trendDirection === 'down' ? '‡¶π‡ßç‡¶∞‡¶æ‡¶∏ ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá' : '‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø‡¶∂‡ßÄ‡¶≤'}
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-purple-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-sm font-medium text-muted-foreground bengali-font">‡¶∏‡ßç‡¶ü‡¶ï ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-purple-600 number-font">
                  {inventoryMetrics ? `${Math.round((inventoryMetrics.totalProducts - inventoryMetrics.lowStockCount) / inventoryMetrics.totalProducts * 100)}%` : '‡ß¶%'}
                </div>
                <p className="text-sm text-muted-foreground bengali-font mt-1">
                  ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶Ø‡¶º
                </p>
              </CardContent>
            </Card>

            <Card className="border-l-4 border-orange-500">
              <CardHeader className="pb-2">
                <CardTitle className="text-sm font-medium text-muted-foreground bengali-font">‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏ ‡¶Ü‡¶§‡ßç‡¶Æ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-orange-600 number-font">
                  {toBengaliNumber(forecast?.confidence || 0)}%
                </div>
                <p className="text-sm text-muted-foreground bengali-font mt-1">
                  ‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡ßÅ‡¶≤‡¶§‡¶æ
                </p>
              </CardContent>
            </Card>
          </div>

          {/* Quick Insights */}
          <Card>
            <CardHeader>
              <CardTitle className="bengali-font flex items-center">
                <i className="fas fa-lightbulb text-yellow-500 mr-3"></i>
                ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶á‡¶®‡¶∏‡¶æ‡¶á‡¶ü
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {customerInsights.slice(0, 4).map((customer, index) => (
                  <div key={customer.customerId} className="p-4 border rounded-lg">
                    <div className="flex items-center justify-between mb-2">
                      <h4 className="font-semibold bengali-font">{customer.customerName}</h4>
                      <Badge variant={customer.riskLevel === 'high' ? 'destructive' : 
                                    customer.riskLevel === 'medium' ? 'default' : 'secondary'}>
                        {customer.riskLevel === 'high' ? '‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø‡¶™‡ßÇ‡¶∞‡ßç‡¶£' : 
                         customer.riskLevel === 'medium' ? '‡¶Æ‡¶æ‡¶ù‡¶æ‡¶Æ‡¶æ‡¶ù‡¶ø' : '‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶'}
                      </Badge>
                    </div>
                    <p className="text-sm text-muted-foreground bengali-font mb-2">
                      ‡¶Æ‡ßã‡¶ü ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ: {formatCurrency(customer.totalPurchases)}
                    </p>
                    <div className="space-y-1">
                      {customer.recommendedActions.slice(0, 2).map((action: string, actionIndex: number) => (
                        <p key={actionIndex} className="text-xs text-blue-600 bengali-font">
                          ‚Ä¢ {action}
                        </p>
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Customer Analysis Tab */}
        <TabsContent value="customers" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="bengali-font">‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶Ü‡¶ö‡¶∞‡¶£ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {customerInsights.map((customer, index) => (
                  <div key={customer.customerId} className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-3">
                      <div>
                        <h3 className="font-semibold text-lg bengali-font">{customer.customerName}</h3>
                        <p className="text-sm text-muted-foreground">
                          ‡¶Ü‡¶ú‡ßÄ‡¶¨‡¶® ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø: {formatCurrency(customer.lifetimeValue)}
                        </p>
                      </div>
                      <div className="text-right">
                        <Badge variant={customer.riskLevel === 'high' ? 'destructive' : 
                                      customer.riskLevel === 'medium' ? 'default' : 'secondary'}>
                          {customer.riskLevel === 'high' ? '‡¶ù‡ßÅ‡¶Å‡¶ï‡¶ø‡¶™‡ßÇ‡¶∞‡ßç‡¶£' : 
                           customer.riskLevel === 'medium' ? '‡¶Æ‡¶æ‡¶ù‡¶æ‡¶Æ‡¶æ‡¶ù‡¶ø' : '‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶'}
                        </Badge>
                        <p className="text-sm text-muted-foreground mt-1">
                          ‡¶ï‡ßç‡¶∞‡ßá‡¶°‡¶ø‡¶ü ‡¶∏‡ßç‡¶ï‡ßã‡¶∞: {toBengaliNumber(customer.creditScore)}
                        </p>
                      </div>
                    </div>

                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶Æ‡ßã‡¶ü ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ</p>
                        <p className="font-semibold number-font">{formatCurrency(customer.totalPurchases)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶ó‡¶°‡¶º ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞</p>
                        <p className="font-semibold number-font">{formatCurrency(customer.averageOrderValue)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶´‡ßç‡¶∞‡¶ø‡¶ï‡ßã‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶∏‡¶ø</p>
                        <p className="font-semibold number-font">{customer.purchaseFrequency.toFixed(1)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶∂‡ßá‡¶∑ ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ</p>
                        <p className="font-semibold text-xs">
                          {customer.lastPurchaseDate ? 
                            new Date(customer.lastPurchaseDate).toLocaleDateString('bn-BD') : '‡¶®‡ßá‡¶á'}
                        </p>
                      </div>
                    </div>

                    <div>
                      <p className="text-sm font-semibold text-muted-foreground mb-2 bengali-font">‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂‡¶∏‡¶Æ‡ßÇ‡¶π:</p>
                      <div className="space-y-1">
                        {customer.recommendedActions.map((action: string, actionIndex: number) => (
                          <p key={actionIndex} className="text-sm text-blue-600 bengali-font">
                            ‚Ä¢ {action}
                          </p>
                        ))}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Sales Patterns Tab */}
        <TabsContent value="sales" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="bengali-font">‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶™‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                {salesPatterns.map((pattern, index) => (
                  <div key={pattern.period} className="border rounded-lg p-4">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="font-semibold text-lg bengali-font">
                        {new Date(pattern.period + '-01').toLocaleDateString('bn-BD', { 
                          year: 'numeric', 
                          month: 'long' 
                        })}
                      </h3>
                      <Badge variant="outline">
                        {toBengaliNumber(pattern.transactions)} ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®
                      </Badge>
                    </div>

                    <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶Ü‡¶Ø‡¶º</p>
                        <p className="font-bold text-green-600 number-font">{formatCurrency(pattern.revenue)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶≤‡¶æ‡¶≠</p>
                        <p className="font-bold text-blue-600 number-font">{formatCurrency(pattern.profit)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶ó‡¶°‡¶º ‡¶¨‡¶æ‡¶∏‡ßç‡¶ï‡ßá‡¶ü</p>
                        <p className="font-bold text-purple-600 number-font">{formatCurrency(pattern.averageBasketSize)}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground bengali-font">‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï ‡¶ß‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ</p>
                        <p className="font-bold text-orange-600 number-font">{pattern.customerRetention.toFixed(1)}%</p>
                      </div>
                    </div>

                    {pattern.topProducts.length > 0 && (
                      <div>
                        <p className="text-sm font-semibold text-muted-foreground mb-2 bengali-font">‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶™‡¶£‡ßç‡¶Ø:</p>
                        <div className="grid grid-cols-1 md:grid-cols-3 gap-2">
                          {pattern.topProducts.slice(0, 3).map((product: any, productIndex: number) => (
                            <div key={productIndex} className="bg-gray-50 rounded p-2">
                              <p className="font-medium text-sm bengali-font">{product.name}</p>
                              <p className="text-xs text-muted-foreground">
                                {toBengaliNumber(product.quantity)}‡¶ü‡¶ø ‚Ä¢ {formatCurrency(product.revenue)}
                              </p>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Inventory Tab */}
        <TabsContent value="inventory" className="space-y-6">
          {inventoryMetrics && (
            <Card>
              <CardHeader>
                <CardTitle className="bengali-font">‡¶∏‡ßç‡¶Æ‡¶æ‡¶∞‡ßç‡¶ü ‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø‡¶ï‡ßç‡¶∏</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-6">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-blue-600 number-font">
                      {toBengaliNumber(inventoryMetrics.totalProducts)}
                    </div>
                    <p className="text-sm text-muted-foreground bengali-font">‡¶Æ‡ßã‡¶ü ‡¶™‡¶£‡ßç‡¶Ø</p>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-red-600 number-font">
                      {toBengaliNumber(inventoryMetrics.lowStockCount)}
                    </div>
                    <p className="text-sm text-muted-foreground bengali-font">‡¶ï‡¶Æ ‡¶∏‡ßç‡¶ü‡¶ï</p>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-green-600 number-font">
                      {toBengaliNumber(inventoryMetrics.fastMovingCount)}
                    </div>
                    <p className="text-sm text-muted-foreground bengali-font">‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶ø</p>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-orange-600 number-font">
                      {formatCurrency(inventoryMetrics.inventoryValue)}
                    </div>
                    <p className="text-sm text-muted-foreground bengali-font">‡¶∏‡ßç‡¶ü‡¶ï‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø</p>
                  </div>
                </div>

                <div className="space-y-4">
                  <div>
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-sm font-medium bengali-font">‡¶∏‡ßç‡¶ü‡¶ï ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø</span>
                      <span className="text-sm text-muted-foreground">
                        {Math.round((inventoryMetrics.totalProducts - inventoryMetrics.lowStockCount) / inventoryMetrics.totalProducts * 100)}%
                      </span>
                    </div>
                    <Progress 
                      value={(inventoryMetrics.totalProducts - inventoryMetrics.lowStockCount) / inventoryMetrics.totalProducts * 100} 
                      className="h-2"
                    />
                  </div>

                  <div>
                    <div className="flex items-center justify-between mb-2">
                      <span className="text-sm font-medium bengali-font">‡¶ü‡¶æ‡¶∞‡ßç‡¶®‡¶ì‡¶≠‡¶æ‡¶∞ ‡¶∞‡ßá‡¶ü</span>
                      <span className="text-sm text-muted-foreground number-font">
                        {inventoryMetrics.turnoverRate.toFixed(1)}
                      </span>
                    </div>
                    <Progress 
                      value={Math.min(inventoryMetrics.turnoverRate * 10, 100)} 
                      className="h-2"
                    />
                  </div>
                </div>
              </CardContent>
            </Card>
          )}
        </TabsContent>

        {/* Forecast Tab */}
        <TabsContent value="forecast" className="space-y-6">
          {forecast && (
            <Card>
              <CardHeader>
                <CardTitle className="bengali-font flex items-center">
                  <i className="fas fa-crystal-ball text-purple-500 mr-3"></i>
                  AI ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§ ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                  <div className="text-center p-4 bg-blue-50 rounded-lg">
                    <div className="text-2xl font-bold text-blue-600 number-font mb-2">
                      {formatCurrency(forecast.predictedRevenue)}
                    </div>
                    <p className="text-sm text-blue-600 bengali-font">‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏‡¶ø‡¶§ ‡¶Ü‡¶Ø‡¶º</p>
                    <p className="text-xs text-muted-foreground bengali-font mt-1">‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ ‡¶Æ‡¶æ‡¶∏</p>
                  </div>

                  <div className="text-center p-4 bg-green-50 rounded-lg">
                    <div className="text-2xl font-bold text-green-600 number-font mb-2">
                      {formatCurrency(forecast.predictedProfit)}
                    </div>
                    <p className="text-sm text-green-600 bengali-font">‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏‡¶ø‡¶§ ‡¶≤‡¶æ‡¶≠</p>
                    <p className="text-xs text-muted-foreground bengali-font mt-1">‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ ‡¶Æ‡¶æ‡¶∏</p>
                  </div>

                  <div className="text-center p-4 bg-purple-50 rounded-lg">
                    <div className="text-2xl font-bold text-purple-600 number-font mb-2">
                      {toBengaliNumber(forecast.confidence)}%
                    </div>
                    <p className="text-sm text-purple-600 bengali-font">‡¶Ü‡¶§‡ßç‡¶Æ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏</p>
                    <p className="text-xs text-muted-foreground bengali-font mt-1">‡¶®‡¶ø‡¶∞‡ßç‡¶≠‡ßÅ‡¶≤‡¶§‡¶æ‡¶∞ ‡¶∏‡ßç‡¶§‡¶∞</p>
                  </div>
                </div>

                <div className="space-y-4">
                  <div>
                    <h3 className="font-semibold mb-2 bengali-font">‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶¨‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶ï‡¶æ‡¶∞‡¶£‡¶∏‡¶Æ‡ßÇ‡¶π:</h3>
                    <div className="space-y-2">
                      {forecast.factors.map((factor: string, index: number) => (
                        <div key={index} className="flex items-center space-x-2">
                          <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                          <span className="text-sm bengali-font">{factor}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                    <div>
                      <p className="font-semibold bengali-font">‡¶™‡ßç‡¶∞‡¶¨‡¶£‡¶§‡¶æ‡¶∞ ‡¶¶‡¶ø‡¶ï</p>
                      <p className="text-sm text-muted-foreground bengali-font">
                        {forecast.trendDirection === 'up' ? '‡¶¨‡ßÉ‡¶¶‡ßç‡¶ß‡¶ø ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá' : 
                         forecast.trendDirection === 'down' ? '‡¶π‡ßç‡¶∞‡¶æ‡¶∏ ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡ßá' : '‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø‡¶∂‡ßÄ‡¶≤'}
                      </p>
                    </div>
                    <div className="text-3xl">
                      {forecast.trendDirection === 'up' ? 'üìà' : 
                       forecast.trendDirection === 'down' ? 'üìâ' : 'üìä'}
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}
        </TabsContent>
      </Tabs>

      {/* Navigation */}
      <div className="mt-8 flex justify-center">
        <Link to="/dashboard">
          <Button variant="outline" className="bengali-font">
            <i className="fas fa-arrow-left mr-2"></i>
            ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶°‡ßá ‡¶´‡¶ø‡¶∞‡ßÅ‡¶®
          </Button>
        </Link>
      </div>
    </div>
  );
}