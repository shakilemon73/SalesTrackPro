/**
 * WhatsApp Business integration for Bengali shopkeepers
 * Enables easy sharing of sales reports, customer dues, and business updates
 */

import { formatCurrency, toBengaliNumber, getBengaliDate } from './bengali-utils';

interface WhatsAppMessage {
  type: 'sales_report' | 'due_reminder' | 'stock_alert' | 'daily_summary';
  recipient?: string;
  content: string;
}

interface SalesReportData {
  todaySales: number;
  totalSales: number;
  profit: number;
  pendingCollection: number;
  salesCount: number;
}

interface DueReminderData {
  customerName: string;
  dueAmount: number;
  lastSaleDate: string;
  customerPhone?: string;
}

class WhatsAppBusinessManager {
  private baseWhatsAppUrl = 'https://wa.me/';
  
  // Generate sales report message in Bengali
  generateSalesReport(data: SalesReportData): WhatsAppMessage {
    const date = getBengaliDate();
    const content = `üè™ *‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ - ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü*
üìÖ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ${date}

üí∞ *‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º:* ${formatCurrency(data.todaySales)}
üìä *‡¶Æ‡ßã‡¶ü ‡¶¨‡¶ø‡¶ï‡ßç‡¶∞‡¶Ø‡¶º:* ${formatCurrency(data.totalSales)}
üíµ *‡¶≤‡¶æ‡¶≠:* ${formatCurrency(data.profit)}
‚è≥ *‡¶¨‡¶æ‡¶ï‡¶ø ‡¶Ü‡¶¶‡¶æ‡¶Ø‡¶º:* ${formatCurrency(data.pendingCollection)}
üõí *‡¶Æ‡ßã‡¶ü ‡¶≤‡ßá‡¶®‡¶¶‡ßá‡¶®:* ${toBengaliNumber(data.salesCount)}‡¶ü‡¶ø

---
‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶§‡ßà‡¶∞‡¶ø üì±
‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®!`;

    return {
      type: 'sales_report',
      content
    };
  }

  // Generate due reminder message in Bengali
  generateDueReminder(data: DueReminderData): WhatsAppMessage {
    const content = `üîî *‡¶¨‡¶æ‡¶ï‡¶ø ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶∞‡¶ø‡¶Æ‡¶æ‡¶á‡¶®‡ßç‡¶°‡¶æ‡¶∞*

‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ${data.customerName} ‡¶≠‡¶æ‡¶á/‡¶Ü‡¶™‡ßÅ,
‡¶Ü‡¶∂‡¶æ ‡¶ï‡¶∞‡¶ø ‡¶≠‡¶æ‡¶≤‡ßã ‡¶Ü‡¶õ‡ßá‡¶®‡•§ 

üí∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£: *${formatCurrency(data.dueAmount)}*
üìÖ ‡¶∂‡ßá‡¶∑ ‡¶ï‡ßá‡¶®‡¶æ‡¶ï‡¶æ‡¶ü‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ${data.lastSaleDate}

‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶Æ‡¶§‡ßã ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶™‡¶∞‡¶ø‡¶∂‡ßã‡¶ß ‡¶ï‡¶∞‡¶¨‡ßá‡¶®‡•§
‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! üôè

---
‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã`;

    return {
      type: 'due_reminder',
      recipient: data.customerPhone,
      content
    };
  }

  // Generate daily business summary
  generateDailySummary(data: SalesReportData & { expenses: number }): WhatsAppMessage {
    const date = getBengaliDate();
    const netProfit = data.profit - data.expenses;
    
    const content = `üìà *‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡¶æ‡¶Ø‡¶º‡¶ø‡¶ï ‡¶∏‡¶æ‡¶∞‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™*
üìÖ ${date}

üí∞ *‡¶Ü‡¶Ø‡¶º:* ${formatCurrency(data.todaySales)}
üí∏ *‡¶ñ‡¶∞‡¶ö:* ${formatCurrency(data.expenses)}
üíµ *‡¶®‡¶ø‡¶ü ‡¶≤‡¶æ‡¶≠:* ${formatCurrency(netProfit)}
‚è≥ *‡¶¨‡¶æ‡¶ï‡¶ø:* ${formatCurrency(data.pendingCollection)}

${netProfit > 0 ? '‚úÖ ‡¶Ü‡¶ú ‡¶≤‡¶æ‡¶≠‡¶ú‡¶®‡¶ï ‡¶¶‡¶ø‡¶®!' : '‚ö†Ô∏è ‡¶Ü‡¶ú ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶∞ ‡¶¶‡¶ø‡¶ï‡ßá!'} 

---
‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ üì±`;

    return {
      type: 'daily_summary',
      content
    };
  }

  // Generate stock alert message
  generateStockAlert(lowStockItems: { name: string; currentStock: number; minStock: number }[]): WhatsAppMessage {
    let content = `‚ö†Ô∏è *‡¶∏‡ßç‡¶ü‡¶ï ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ*\n\n‡¶®‡¶ø‡¶Æ‡ßç‡¶®‡¶≤‡¶ø‡¶ñ‡¶ø‡¶§ ‡¶™‡¶£‡ßç‡¶Ø‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶ï‡¶Æ:\n\n`;
    
    lowStockItems.forEach(item => {
      content += `‚Ä¢ ${item.name}: ${toBengaliNumber(item.currentStock)} (‡¶∏‡¶∞‡ßç‡¶¨‡¶®‡¶ø‡¶Æ‡ßç‡¶®: ${toBengaliNumber(item.minStock)})\n`;
    });
    
    content += `\nüì¶ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∏‡ßç‡¶ü‡¶ï ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®!\n\n---\n‡¶¶‡ßã‡¶ï‡¶æ‡¶® ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ`;

    return {
      type: 'stock_alert',
      content
    };
  }

  // Open WhatsApp with message
  shareViaWhatsApp(message: WhatsAppMessage, phoneNumber?: string): void {
    const encodedMessage = encodeURIComponent(message.content);
    let whatsappUrl = `${this.baseWhatsAppUrl}`;
    
    if (phoneNumber || message.recipient) {
      const phone = (phoneNumber || message.recipient || '').replace(/[^\d]/g, '');
      whatsappUrl += `${phone}?text=${encodedMessage}`;
    } else {
      whatsappUrl += `?text=${encodedMessage}`;
    }
    
    // Open WhatsApp in new tab
    window.open(whatsappUrl, '_blank');
    
    console.log(`üì± WHATSAPP: Opening message type ${message.type}`);
  }

  // Share sales report
  shareSalesReport(data: SalesReportData, phoneNumber?: string): void {
    const message = this.generateSalesReport(data);
    this.shareViaWhatsApp(message, phoneNumber);
  }

  // Send due reminder
  sendDueReminder(data: DueReminderData): void {
    const message = this.generateDueReminder(data);
    this.shareViaWhatsApp(message, data.customerPhone);
  }

  // Share daily summary
  shareDailySummary(data: SalesReportData & { expenses: number }, phoneNumber?: string): void {
    const message = this.generateDailySummary(data);
    this.shareViaWhatsApp(message, phoneNumber);
  }

  // Share stock alert
  shareStockAlert(lowStockItems: { name: string; currentStock: number; minStock: number }[], phoneNumber?: string): void {
    const message = this.generateStockAlert(lowStockItems);
    this.shareViaWhatsApp(message, phoneNumber);
  }
}

// Export singleton instance
export const whatsappManager = new WhatsAppBusinessManager();

// Helper function to format phone number for Bangladesh
export function formatBangladeshPhone(phone: string): string {
  // Remove all non-digits
  const cleanPhone = phone.replace(/[^\d]/g, '');
  
  // If starts with 88, keep as is
  if (cleanPhone.startsWith('88')) {
    return cleanPhone;
  }
  
  // If starts with 0, replace with 88
  if (cleanPhone.startsWith('0')) {
    return '88' + cleanPhone;
  }
  
  // If starts with 1 (mobile number), add 880
  if (cleanPhone.startsWith('1') && cleanPhone.length === 11) {
    return '88' + cleanPhone;
  }
  
  return cleanPhone;
}